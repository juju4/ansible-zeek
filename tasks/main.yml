---

- name: Include version-specific variables for Debian
  ansible.builtin.include_vars: "Debian-{{ ansible_distribution_major_version }}.yml"
  when: ansible_os_family == "Debian" and ansible_distribution != "Ubuntu"
- name: Include version-specific variables for Ubuntu.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat"

- name: Debian | Install Bro dependencies
  ansible.builtin.apt:
    name: ['git', 'gdb', 'gpg']
    state: present
    update_cache: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  register: pkg_result
  until: pkg_result is success

- name: Ensure unprivileged zeek user exists
  ansible.builtin.user:
    name: "{{ broids_user }}"
    home: "{{ broids_home }}"
    create_home: no
    system: yes
  when: broids_user != 'root'

- name: Debian | install zeek
  ansible.builtin.import_tasks: debian.yml
  when: >
    not bro_force_source_build and
    (not use_zeek_opensuse_repo or ansible_distribution_release == "xenial") and
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Debian opensuse repo-based | install zeek
  ansible.builtin.import_tasks: debian-opensuse.yml
  when: >
    not bro_force_source_build and
    (use_zeek_opensuse_repo and ansible_distribution_release != "xenial") and
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Redhat | install zeek
  ansible.builtin.import_tasks: redhat.yml
  when: not bro_force_source_build and ansible_os_family == "RedHat"

- name: Install zeek from source
  ansible.builtin.import_tasks: source.yml
  when: bro_force_source_build and not use_zeek_opensuse_repo

## Extra configuration
- name: Add BROPATH to /etc/profile
  ansible.builtin.lineinfile:
    dest: /etc/profile
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    mode: '0644'
    state: present
    create: yes
  with_items:
    - { regexp: '^export BROPATH=', line: 'export BROPATH={{ bro_prefix }}' }
    - { regexp: '^export PATH=', line: 'export PATH=$PATH:$BROPATH/bin' }

- name: Unprivileged zeek with Linux Capabilities
  community.general.capabilities:
    path: "{{ broids_bin }}"
    capability: 'cap_net_admin,cap_net_raw+eip'
    state: present
  when: broids_user != 'root'

- name: Ensure zeek directories exist
  ansible.builtin.file:
    dest: "{{ item }}"
    state: "directory"
    mode: '0775'
    owner: "{{ broids_user }}"
    group: "{{ broids_group }}"
  with_items:
    - "{{ broids_site }}"
    - "{{ broids_log }}"
    - "{{ broids_log }}/stats"
    - "{{ broids_spool }}"
    - "{{ broids_spool }}/tmp"
    - "{{ broids_spool }}/misp2bro"
    - "{{ bro_intel }}"
    - "{{ bro_extractedfiles }}/http"
    - "{{ bro_extractedfiles }}/ftp"
    - "{{ bro_prefix }}/share/zeekctl/scripts"
    - "{{ broids_spool }}/bro"
    # this seems required only when migrating from privileged zeek. else no idempotence.
    # - "{{ broids_spool }}/installed-scripts-do-not-touch/auto"
    # - "{{ broids_spool }}/installed-scripts-do-not-touch/site"

# - name: young-ssl bro script
#   ansible.builtin.copy:
#     src=young-ssl.bro dest={{ broids_site }}/young-ssl.bro mode=644
## https://github.com/JustinAzoff/bro_scripts
- name: Extra zeek script
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ broids_site }}/{{ item }}"
    mode: '0644'
  with_items:
    - file_analysis_02.bro
- name: Import random
  ansible.builtin.import_tasks: random.yml
  vars:
    random_name: local
- name: Add zeek local configuration
  ansible.builtin.template:
    src: local.zeek.j2
    dest: "{{ broids_site }}/local.zeek"
    mode: '0644'
    backup: yes
  notify:
    - Check zeek
    - Deploy zeek
    - Restart zeek

## Note: file is created by broctl: install and {{ broids_spool }}/broctl-config.sh
##  -> {{ bro_prefix }}/share/broctl/scripts/broctl-config.sh
- name: Check if zeekctl-config.sh is present
  ansible.builtin.stat:
    path: "{{ broids_spool }}/zeekctl-config.sh"
  register: st
- name: Zeekctl-config.sh
  when: st.stat.exists
  block:
    - name: Configure zeekctl-config.sh
      ansible.builtin.lineinfile:
        # dest: "{{ broids_etc }}/broctl.cfg"
        dest: "{{ broids_spool }}/zeekctl-config.sh"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        mode: '0660'
        owner: "{{ broids_user }}"
        state: present
        backup: yes
        create: yes
      with_items:
        # missing on rhel8
        - { regexp: '^libdirinternal=.*', line: "libdirinternal=\"{{ zeekctl_lib | default(bro_prefix + '/lib/zeek/python') }}\"" }
        - { regexp: '^plugindir=.*', line: "plugindir=\"{{ broids_plugindir }}\"" }
        ## log retention in days
        - { regexp: '^logexpireinterval=.*', line: "logexpireinterval=\"{{ broids_logexpire_interval }}\"" }
        - { regexp: '^statslogexpireinterval=.*', line: "statslogexpireinterval=\"{{ broids_statslogexpire_interval }}\"" }
      notify:
        - Check zeek
        - Deploy zeek
        - Restart zeek

- name: Configure zeek maintenance script as scheduled task
  ansible.builtin.cron:
    name: "zeek maintenance"
    minute: "*/5"
    user: "{{ broids_user }}"
    job: "{{ broids_broctl }} cron"
    cron_file: "ansible_bro"

- name: Configure node.cfg
  ansible.builtin.template:
    src: "node.cfg.j2"
    dest: "{{ broids_etc }}/node.cfg"
    mode: "0664"
    owner: "root"
    group: "{{ broids_group }}"
  notify:
    - Check zeek
    - Deploy zeek
    - Restart zeek

- name: Import pdns
  ansible.builtin.import_tasks: pdns.yml
  when: broids_pdns_enable

- name: Import bro-scripts
  ansible.builtin.import_tasks: bro-scripts.yml

- name: Check zeekctl-config.sh
  ansible.builtin.command: "cat {{ broids_config }}"
  changed_when: false
  failed_when: false
  register: zeekctlcfg
- name: Remove placeholder zeekctl-config.sh
  ansible.builtin.file:
    path: "{{ broids_config }}"
    state: absent
  when: >
    zeekctlcfg.stdout is defined and
    zeekctlcfg.stdout == '# Automatically generated. Do not edit.'

- name: Ending zeek configuration
  ansible.builtin.command: "{{ broids_broctl }} install"
  become: yes
  become_user: "{{ broids_user }}"
  args:
    creates: "{{ broids_config }}"
  notify:
    - Check zeek
    - Deploy zeek
    - Restart zeek

- name: Check if offloading marker is present
  ansible.builtin.stat:
    path: /root/.ansible-zeek-offloading
  register: offload
- name: Network offloading
  when: not offload.stat.exists
  block:
    ## OR http://serverfault.com/questions/421995/disable-tcp-offloading-completely-generically-and-easily
    - name: Check network card checksum offloading state
      ansible.builtin.command: "ethtool --show-offload {{ bro_nodes_if }}"
      register: ethtool
      changed_when: false
    ## FIXME! not working on digitalocean droplet: got: 'rx-checksumming: on [fixed] tx-checksumming: off' and can't change
    - name: Disable network card offloading for eth0
      ansible.builtin.command:  # noqa no-changed-when
        cmd: "ethtool --offload {{ bro_nodes_if }} rx off tx off"
      when: "ethtool.stdout is defined and '-checksumming: on' in ethtool.stdout"
      failed_when: false
    - name: Add offloading marker
      ansible.builtin.file:
        dest: /root/.ansible-zeek-offloading
        mode: '0644'
        state: touch

# - name: start BRO_PDNS API service
#   ansible.builtin.command: >
#     {{ broids_site }}/bro-pdns/bro_pdns.py serve
#   environment:
#     BRO_PDNS_DB: "mysql://{{ mysql_pdns_user }}::{{ mysql_pdns_pass }}@localhost/pdns"

# Test
# curl http://localhost:8081/dns/www.youtube.com

- name: Import zkg
  ansible.builtin.import_tasks: zkg.yml
  when: zeek_zkg_enable | bool
- name: Import aide-hids
  ansible.builtin.import_tasks: aide-hids.yml
- name: Import monit
  ansible.builtin.import_tasks: monit.yml
- name: Import reporting
  ansible.builtin.import_tasks: reporting.yml
  when: zeek_reporting

- name: Zeek diag
  ansible.builtin.command: "{{ broids_broctl }} diag"
  become: yes
  become_user: "{{ broids_user }}"
  changed_when: false

- name: Install testing tools
  ansible.builtin.package:
    name: "{{ broids_testing_pkgs }}"
    state: present
  when: broids_testing
